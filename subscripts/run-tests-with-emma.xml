<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2012 The Android Open Source Project
    Copyright 2012 Keita Kita

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project>

    <!-- -test-coverage-xml target is overrided test target in tools/ant/build.xml on
         Android SDK Tools Revision 20. -->

    <target name="-test-coverage-xml"
                description="Runs tests from the package defined in test.package property">
        <if condition="${project.is.test}">
        <then>
            <property name="tested.project.absolute.dir" location="${tested.project.dir}" />

            <!-- Application package of the tested project extracted from its manifest file -->
            <xpath input="${tested.project.absolute.dir}/AndroidManifest.xml"
                    expression="/manifest/@package" output="tested.project.app.package" />

            <if condition="${emma.enabled}">
                <then>
                    <getprojectpaths projectPath="${tested.project.absolute.dir}"
                            binOut="tested.project.out.absolute.dir"
                            srcOut="tested.project.source.absolute.dir" />

                    <getlibpath projectPath="${tested.project.absolute.dir}"
                            libraryFolderPathOut="tested.project.lib.source.path"
                            leaf="@{source.dir}" />
                </then>
            </if>
        </then>
        <else>
            <!-- this is a test app, the tested package is the app's own package -->
            <property name="tested.project.app.package" value="${project.app.package}" />

            <if condition="${emma.enabled}">
                <then>
                    <property name="tested.project.out.absolute.dir" value="${out.absolute.dir}" />
                    <property name="tested.project.source.absolute.dir" value="${source.absolute.dir}" />

                    <getlibpath
                            libraryFolderPathOut="tested.project.lib.source.path"
                            leaf="@{source.dir}" />
                </then>
            </if>
        </else>
        </if>

        <property name="emma.dump.file"
                value="/data/data/${tested.project.app.package}/coverage.ec" />

        <echo>WARNING: Code Coverage is currently only supported on the emulator and rooted devices.</echo>
        <run-tests-for-xml>
            <args>
                <arg value="-a" />
                <arg path="${adb}" />
                <arg value="-b" />
                <arg value="${adb.device.arg}" />
                <arg value="-o" />
                <arg value="${test.result.xml.output}" />
                <arg value="--coverage" />
                <arg value="${project.app.package}" />
                <arg value="${test.runner}" />
            </args>
        </run-tests-for-xml>
        <echo level="info">Downloading coverage file into project directory...</echo>
        <exec executable="${adb}" failonerror="true">
            <arg line="${adb.device.arg}" />
            <arg value="pull" />
            <arg value="${emma.dump.file}" />
            <arg path="${out.absolute.dir}/coverage.ec" />
        </exec>
        <echo level="info">Extracting coverage report...</echo>

        <pathconvert property="tested.project.lib.source.path.value" refid="tested.project.lib.source.path">
            <firstmatchmapper>
                <regexpmapper from='^([^ ]*)( .*)$$' to='"\1\2"'/>
                <identitymapper/>
            </firstmatchmapper>
        </pathconvert>

        <emma>
            <report sourcepath="${tested.project.source.absolute.dir}:${tested.project.lib.source.path.value}"
                    verbosity="${verbosity}">
                <infileset file="${out.absolute.dir}/coverage.ec" />
                <infileset file="${tested.project.out.absolute.dir}/coverage.em" />
                <xml outfile="${coverage.xml.output}" />
                <html outfile="${coverage.html.output}" encoding="UTF-8" />
           </report>
        </emma>
        <echo level="info">Cleaning up temporary files...</echo>
        <delete file="${out.absolute.dir}/coverage.ec" />
        <delete file="${tested.project.out.absolute.dir}/coverage.em" />
        <echo message="XML of test result is saved to ${test.result.xml.output}" />
        <echo message="HTML and XML of coverage report are saved to ${coverage.html.output} and ${coverage.xml.output}" />
    </target>
</project>